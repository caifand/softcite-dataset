{
    "id": "d3cf53c613",
    "level": "sentence",
    "abstract": [],
    "body_text": [
        {
            "text": "Genome sequencing events have resulted in a rapid accumulation of protein sequences in public databases. ",
            "section": "INTRODUCTION",
            "entity_spans": [
                {
                    "start": 73,
                    "end": 80,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-136",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "As an essential tool in computational sequence analysis, sequence alignment is widely used in similarity searches, structure modeling, functional prediction and phylogenetic analysis (1)(2)(3)(4)(5). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 172,
                    "end": 180,
                    "type": "table",
                    "text": "Table 2)"
                }
            ]
        },
        {
            "text": "Construction of a multiple sequence alignment aims at arranging residues with inferred common evolutionary origin in the same position for a set of sequences (6).",
            "section": "INTRODUCTION",
            "entity_spans": [
                {
                    "start": 10,
                    "end": 17,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-137",
                    "cert": "1.0"
                },
                {
                    "start": 18,
                    "end": 23,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-138",
                    "cert": "1.0"
                },
                {
                    "start": 28,
                    "end": 36,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-139",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Valuable information regarding position-specific residue usage and conservation can be extracted numerically from a multiple sequence alignment for various applications.",
            "section": "INTRODUCTION"
        },
        {
            "text": "A classical method for constructing a multiple alignment aligns sequences progressively, as exemplified by the programClustalW (7). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 127,
                    "end": 130,
                    "type": "bibr",
                    "text": "(7)"
                }
            ],
            "entity_spans": [
                {
                    "start": 118,
                    "end": 126,
                    "type": "software",
                    "rawForm": "ClustalW",
                    "resp": "#annotator12",
                    "id": "d3cf53c613-software-simple-0",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Guided by a tree or a dendrogram that reflects the similarities among sequences, a progressive method makes a series of pairwise alignments for neighboring sequences or pre-aligned sequence groups. ",
            "section": "INTRODUCTION"
        },
        {
            "text": "In this way, similar sequences are aligned prior to divergent sequences. ",
            "section": "INTRODUCTION"
        },
        {
            "text": "However, progressive methods do not correct errors made in each pairwise alignment step. ",
            "section": "INTRODUCTION"
        },
        {
            "text": "While similar sequences can be aligned with acceptable quality, progressive methods using general amino acid substitution matrices have limited success in obtaining high-quality alignments for divergent sequences (8).",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 213,
                    "end": 216,
                    "type": "bibr",
                    "text": "(8)"
                }
            ]
        },
        {
            "text": "Two main techniques are utilized to correct or minimize mistakes made in the progressive alignment process. ",
            "section": "INTRODUCTION"
        },
        {
            "text": "One is iterative refinement of the alignment after the progressive steps (9-11), e.g. by repeatedly dividing the aligned sequences into two groups and realigning the groups. ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 73,
                    "end": 79,
                    "type": "bibr",
                    "text": "(9-11)"
                }
            ]
        },
        {
            "text": "The other technique, pioneered by the program T-COFFEE (12), makes a consistency measure among a set of pairwise sequence alignments before the progressive alignment steps. ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 55,
                    "end": 59,
                    "type": "bibr",
                    "text": "(12)"
                }
            ],
            "entity_spans": [
                {
                    "start": 46,
                    "end": 54,
                    "type": "software",
                    "rawForm": "T-COFFEE",
                    "resp": "#annotator12",
                    "id": "d3cf53c613-software-simple-1",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Such consistency-based scoring functions are superior to scoring functions based on general amino acid substitution matrices (12).",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 125,
                    "end": 129,
                    "type": "bibr",
                    "text": "(12)"
                }
            ]
        },
        {
            "text": "Improving pairwise sequence alignments is a key to provide high-quality starting materials for a consistency measure. ",
            "section": "INTRODUCTION"
        },
        {
            "text": "The most common technique of constructing a protein pairwise alignment utilizes a substitution matrix of amino acids and a dynamic programming algorithm with gap penalties (13,14). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 172,
                    "end": 179,
                    "type": "bibr",
                    "text": "(13,14)"
                }
            ]
        },
        {
            "text": "Commonly used substitution matrices, such as the BLOSUM or PAM series matrices (15,16) are derived from large-scale analysis of relatively similar sequences. ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 79,
                    "end": 86,
                    "type": "bibr",
                    "text": "(15,16)"
                }
            ]
        },
        {
            "text": "Other matrices have been derived from distant homologs based on structural alignments (17,18), and they are more suitable for aligning divergent sequences. ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 86,
                    "end": 93,
                    "type": "bibr",
                    "text": "(17,18)"
                }
            ]
        },
        {
            "text": "Several studies have also shown that real or predicted local structural information can be used to improve pairwise alignment quality (19,20).",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 134,
                    "end": 141,
                    "type": "bibr",
                    "text": "(19,20)"
                }
            ]
        },
        {
            "text": "Another approach to constructing a pairwise alignment relies on a hidden Markov model (HMM) (21,22). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 92,
                    "end": 99,
                    "type": "bibr",
                    "text": "(21,22)"
                }
            ]
        },
        {
            "text": "In a simple HMM for global pairwise alignment, aligned residue pairs are modeled by a hidden match state, while insertions and deletions are modeled by two hidden states that generate unmatched residues in either of the two sequences (22). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 234,
                    "end": 238,
                    "type": "bibr",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "In addition to being able to find an optimal alignment, a pairwise alignment HMM can be used to estimate the posterior probability of any residue in the first sequence being aligned to any residue in the second sequence (22). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 220,
                    "end": 224,
                    "type": "bibr",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "These residue match probabilities have been used in ProbCons (23), a multiple sequence alignment program based on probabilistic consistency.",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 61,
                    "end": 65,
                    "type": "bibr",
                    "text": "(23)"
                }
            ],
            "entity_spans": [
                {
                    "start": 52,
                    "end": 60,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-2",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Another approach to constructing a pairwise alignment relies on a hidden Markov model (HMM) (21,22). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 92,
                    "end": 96,
                    "type": "bibr",
                    "ref_id": "b21",
                    "text": "(21,"
                },
                {
                    "start": 96,
                    "end": 99,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "22)"
                }
            ]
        },
        {
            "text": "In a simple HMM for global pairwise alignment, aligned residue pairs are modeled by a hidden match state, while insertions and deletions are modeled by two hidden states that generate unmatched residues in either of the two sequences (22). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 234,
                    "end": 238,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "In addition to being able to find an optimal alignment, a pairwise alignment HMM can be used to estimate the posterior probability of any residue in the first sequence being aligned to any residue in the second sequence (22). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 220,
                    "end": 224,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "These residue match probabilities have been used in ProbCons (23), a multiple sequence alignment program based on probabilistic consistency.",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 61,
                    "end": 65,
                    "type": "bibr",
                    "ref_id": "b23",
                    "text": "(23)"
                }
            ]
        },
        {
            "text": "In this study, we aim to improve alignment quality by using: ",
            "section": "INTRODUCTION"
        },
        {
            "text": "(i) more complex pairwise alignment HMMs that incorporate local structural information and ",
            "section": "INTRODUCTION"
        },
        {
            "text": "(ii) better estimation of HMM parameters from a large set of structural alignments of divergent domain pairs from SCOP database (24). ",
            "section": "INTRODUCTION",
            "ref_spans": [
                {
                    "start": 128,
                    "end": 132,
                    "type": "bibr",
                    "ref_id": "b24",
                    "text": "(24)"
                }
            ]
        },
        {
            "text": "We show that these two techniques improve both pairwise alignments and probabilistic consistency-based multiple sequence alignments in reference-dependent and reference-independent tests.",
            "section": "INTRODUCTION"
        },
        {
            "text": "Protein domain sequences and structures were obtained from the ASTRAL database (25) based on SCOP (24) version 1.69. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "We used the dataset consisting of representatives at the 40% sequence identity threshold (SCOP40). ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "Domains from SCOP classes 1 to 4 [all alpha, all beta, alpha and beta (a/b), alpha and beta (a + b)] were selected. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "For each domain pair from the same superfamily of SCOP40, we computed a structural alignment using the program DaliLite (26). ",
            "section": "Training and testing datasets of SCOP domain pairs",
            "ref_spans": [
                {
                    "start": 120,
                    "end": 124,
                    "type": "bibr",
                    "text": "(26)"
                }
            ],
            "entity_spans": [
                {
                    "start": 111,
                    "end": 119,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-3",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Alignments with coverage (fraction of aligned region to the length of the shorter sequence) less than 0.6 were removed. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "The remaining alignments were divided into four datasets corresponding to four sequence identity bins: <10, 10-15, 15-20 and 20-40%. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "The method for calculating sequence identity that takes into account unaligned regions is described in Supplementary Data. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "To apply cross validation training and testing, we divided the domain pairs in each identity bin into four subsets at the SCOP fold level, so that no domains belonging to the same SCOP fold were shared by any two subsets. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "We estimated HMM parameters using alignments in three subsets and tested the programs on representative domain pairs of the remaining fourth subset. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "This procedure was performed four times corresponding to four ways of partitioning into training and testing datasets. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "To obtain representative alignments from a subset for testing, we randomly selected one domain pair from each SCOP fold in that subset. ",
            "section": "Training and testing datasets of SCOP domain pairs"
        },
        {
            "text": "The number of domain pairs in each training dataset is larger than 10 000 (Supplementary Table S1).",
            "section": "Training and testing datasets of SCOP domain pairs",
            "ref_spans": [
                {
                    "start": 74,
                    "end": 98,
                    "type": "table",
                    "text": "(Supplementary Table S1)"
                }
            ]
        },
        {
            "text": "Description of HMM structures. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "The standard pairwise alignment HMM has three hidden states emitting residues: a single match state 'M' emitting residue pairs, an 'X' state emitting residues in the first sequence and a 'Y' state emitting residues in the second sequence ( Figure 1b)  (22). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 240,
                    "end": 250,
                    "type": "figure",
                    "ref_id": "fig_2",
                    "text": "Figure 1b)"
                },
                {
                    "start": 252,
                    "end": 256,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "This model structure is named HMM_1_1_0 (the format of HMM names is described below and in Table 1 and Supplementary Table S2).",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 91,
                    "end": 125,
                    "type": "table",
                    "ref_id": "tab_0",
                    "text": "Table 1 and Supplementary Table S2"
                }
            ]
        },
        {
            "text": "The novelty of our complex HMMs is the introduction of more match states based on DaliLite structural alignments, which have aligned core blocks (structurally superimposable, shown in uppercase letters) and unaligned regions (structurally not superimposable, shown in lowercase letters) ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(a) Structure-based alignment and hidden state paths Figure 1. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(a) An illustration of structure-based sequence alignment and hidden state paths. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "In Sequences 1 and 2, uppercase letters and lowercase letters represent aligned core blocks and unaligned regions, respectively. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "If two corresponding unaligned regions bounded by the same two core blocks are of different length, we split the shorter one into two pieces and introduce contiguous gaps in the middle. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "For both N-and C-terminal ends, the shorter unaligned region is pushed toward the core blocks. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Secondary structure (ss) types (helix, 'h'; strand, 'e'; coil, 'c') are shown for Sequence 1. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "The hidden state paths for three models are shown below the amino acid sequences. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(b) Model structure of HMM_1_1_0. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Residue pairs in unaligned regions are modeled using the same match state ('M') as those in the aligned blocks. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Insertions in the first sequence and second sequence are modeled using states 'X' and 'Y', respectively. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(c) Model structure of HMM_1_1_1. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Residue pairs in the unaligned regions are modeled using a different match state ('U') than the match state in the core blocks ('M'). ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(d) Model structure of HMM_1_3_1. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Residue pairs in aligned core blocks are modeled using three match states ('H', 'S', 'C') according to three secondary structure types of the first sequence. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "In ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(b), ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(c) and ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "(d), match states are shown as squares and insertion states are shown as diamonds. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Begin state, end state, and transitions from or to them are present in these models, but are not shown. ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 45,
                    "end": 55,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "(Figure 1a"
                }
            ]
        },
        {
            "text": "(Figure 1a). ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Residue pairs in aligned core blocks can be modeled by a match state ('M'). ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "If the two unaligned regions in between two core blocks have different and non-zero lengths, they can be modeled using a different 'match' state ('U', for unaligned) (Figure 1c) and 'X' or 'Y' state. ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 109,
                    "end": 118,
                    "type": "figure",
                    "ref_id": "fig_2",
                    "text": "Figure 1c"
                }
            ]
        },
        {
            "text": "This is done by evenly splitting the unaligned residues in the sequence with the shorter unaligned region into two segments, placing them beside the two adjacent core blocks and separating them by a single stretch of gap symbols. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "In this way, transitions between 'X' and 'Y' do not occur. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "The residue pair emission probabilities of these artificially forced matches in unaligned regions ('U') are expected to be different from those in the core blocks ('M'). ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "This model (HMM_1_1_1) has two distinct match states: 'M' and 'U' (Figure 1a and ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 8,
                    "end": 25,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "(Figure 1a and c)"
                }
            ]
        },
        {
            "text": "c).",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Furthermore, the residue matches in aligned core blocks can be modeled by several distinct match states based on the local structure information of the first sequence, for instance, secondary structure types (Figure 1d). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 208,
                    "end": 219,
                    "type": "figure",
                    "text": "(Figure 1d)"
                }
            ]
        },
        {
            "text": "Since residue usage and substitution patterns can vary for different local structural environments, the three match states according to secondary structure types have different sets of emission probabilities of 400 residue pairs. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Secondary structure types were assigned using program DSSP (27) for SCOP domains. ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 59,
                    "end": 63,
                    "type": "bibr",
                    "text": "(27)"
                }
            ],
            "entity_spans": [
                {
                    "start": 54,
                    "end": 58,
                    "type": "software",
                    "rawForm": "DSSP",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-5",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The model that incorporates three secondary structure types ('H': helix, 'S': strand and 'C': coil) of the first sequence and unaligned match state ('U') is named HMM_1_3_1 (Figure 1d). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 173,
                    "end": 184,
                    "type": "figure",
                    "text": "(Figure 1d)"
                }
            ]
        },
        {
            "text": "Similarly, multiple match states can be introduced based on several solvent accessibility categories, or a combination of solvent accessibility categories and secondary structure types. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Solvent accessibilities of residue sidechains were calculated by program NACCESS (28). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 81,
                    "end": 85,
                    "type": "bibr",
                    "text": "(28)"
                }
            ],
            "entity_spans": [
                {
                    "start": 73,
                    "end": 80,
                    "type": "software",
                    "rawForm": "NACCESS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-6",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Three solvent accessibility categories were used based on our previous studies (29). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 79,
                    "end": 83,
                    "type": "bibr",
                    "text": "(29)"
                }
            ]
        },
        {
            "text": "The model that incorporates three solvent accessibility categories and unaligned match state is named HMM_3_1_1. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Combination of three solvent accessibility categories and three secondary structure types results in nine classes of match states for the core blocks (model HMM_3_3_1).",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Each HMM model is named in the format 'HMM_solv_ss_u', where 'solv' is the number of solvent accessibility categories, 'ss' is the number of secondary structure types, and 'u' is 1 if unaligned regions are modeled with an additional match state. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Some statistics about the five HMMs, such as the number of hidden states, the number of parameters and time complexity, are listed in Supplementary  Table S2.",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 134,
                    "end": 157,
                    "type": "table",
                    "ref_id": "tab_1",
                    "text": "Supplementary  Table S2"
                }
            ]
        },
        {
            "text": "Estimation of HMM parameters. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "We used a supervised learning method to estimate HMM parameters from DaliLite structural alignments, since hidden state paths are known for them (Figure 1a) (22). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 145,
                    "end": 156,
                    "type": "figure",
                    "text": "(Figure 1a)"
                },
                {
                    "start": 157,
                    "end": 161,
                    "type": "bibr",
                    "text": "(22)"
                }
            ],
            "entity_spans": [
                {
                    "start": 69,
                    "end": 77,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-7",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "These parameters are: transition probabilities among hidden states [match state(s), 'X' state, 'Y' state, begin state and end state], emission probabilities of residue pairs for each match state, and residue emission probabilities for 'X' state and 'Y' state (22). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 259,
                    "end": 263,
                    "type": "bibr",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "Given a training dataset, we assign a weight to each sequence. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "If a sequence occurs N times in the dataset, its weight is 1/N 1/2 . ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "For large SCOP superfamilies, one sequence is involved in a large number of pairwise alignments. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Sequence weighting aims to reduce the bias introduced by large superfamilies and folds. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "The parameters were estimated from weighted counts of observed transitions and emissions in DaliLite alignments (22).",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 112,
                    "end": 116,
                    "type": "bibr",
                    "text": "(22)"
                }
            ],
            "entity_spans": [
                {
                    "start": 92,
                    "end": 100,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator5",
                    "used": true,
                    "id": "d3cf53c613-software-simple-8",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The supervised learning method was also used to estimate model parameters from pairwise alignments in BAliBASE2.0 (30), from which ProbCons derived its HMM parameters with a different approach (23). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 193,
                    "end": 197,
                    "type": "bibr",
                    "text": "(23)"
                }
            ],
            "entity_spans": [
                {
                    "start": 131,
                    "end": 139,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-9",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "These alignments also have core blocks assigned (uppercase letters). ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "However, local structural information is not available for every sequence. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Therefore, from BAliBASE2.0 pairwise alignments, we derived parameters only for models HMM_1_1_0 and HMM_1_1_1 that do not have local structure-dependent match states.",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Pairwise alignment with optimal match probabilities. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "We apply standard forward and backward algorithms (22) to align two sequences x \u00bc (x 1 , x 2 , . . . , x m ) and y \u00bc (y 1 , y 2 , . . . , y n ) (m and n are the lengths of x and y). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 50,
                    "end": 54,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "Given a pairwise HMM, the forward algorithm applies a dynamic programming technique to calculate the probability of observing two subsequences (x 1 , . . . , x i ) and (y 1 , . . . , y j ) generated by an HMM, with the last position of the two subsequences being in a certain hidden state. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "The formula of forward probability is:",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "Here, p(i, j) is the hidden state of the last position. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "K is one of the hidden states. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "For example, for model HMM_1_3_1, K is from the set {'H', 'S', 'C', 'U', 'X', 'Y'} ( Figure 1d). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 85,
                    "end": 94,
                    "type": "figure",
                    "ref_id": "fig_2",
                    "text": "Figure 1d"
                }
            ]
        },
        {
            "text": "The backward algorithm calculates the probability of generating two subsequences (x i+1 , . . . , x m ) and (y j+1 , . . . , y n ), given the condition that the previous position of the two subsequences is of a certain type of hidden state. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "The formula of the backward probability is:",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "The following formula can be derived (22):",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 37,
                    "end": 41,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "is the probability of aligned residue pair (x i , y j ) being generated by a certain hidden match state K given the two full-length sequences x and y, and P(x, y) is the full probability of observing sequences x and y given the model. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "P(x, y) can be calculated by forward algorithm or backward algorithm (22). ",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 69,
                    "end": 73,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "(22)"
                }
            ]
        },
        {
            "text": "The posterior probability (22,31) of residue i in sequence x being aligned to residue j in sequence y (match probability) can be calculated as:",
            "section": "HMMs of pairwise sequence alignment",
            "ref_spans": [
                {
                    "start": 26,
                    "end": 30,
                    "type": "bibr",
                    "ref_id": "b22",
                    "text": "(22,"
                },
                {
                    "start": 30,
                    "end": 33,
                    "type": "bibr",
                    "ref_id": "b31",
                    "text": "31)"
                }
            ]
        },
        {
            "text": "Here, K m belongs to a set of match states. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "For model HMM_1_3_1, K m is from the set {'H', 'S', 'C', 'U'}.",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "We then find the alignment path that maximizes the sum of match probabilities of residue pairs in the alignment path using dynamic programming with zero gap penalties. ",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "It has been shown that this technique can give better alignment quality than Viterbi algorithm (23).",
            "section": "HMMs of pairwise sequence alignment"
        },
        {
            "text": "We have developed a progressive multiple sequence alignment program implementing our HMMs (MUMMALS, standing for MUltiple alignment with Multiple MAtch state models of Local Structure). ",
            "section": "Multiple sequence alignment procedure",
            "entity_spans": [
                {
                    "start": 91,
                    "end": 98,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-10",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "It applies a probabilistic consistency scoring function similar to the one in ProbCons (23). ",
            "section": "Multiple sequence alignment procedure",
            "ref_spans": [
                {
                    "start": 87,
                    "end": 91,
                    "type": "bibr",
                    "text": "(23)"
                }
            ],
            "entity_spans": [
                {
                    "start": 78,
                    "end": 86,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-11",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "First, a tree is built-in a fast way based on a k-mer count method (10). ",
            "section": "Multiple sequence alignment procedure",
            "ref_spans": [
                {
                    "start": 67,
                    "end": 71,
                    "type": "bibr",
                    "text": "(10)"
                }
            ]
        },
        {
            "text": "An initial alignment is built progressively guided by the tree with a simple sum-of-pairs scoring function. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "A second tree is then built with a UPGMA method based on sequence identities calculated from the initial alignment. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "We then apply the probabilistic consistency strategy as described by Do et al. (23). ",
            "section": "Multiple sequence alignment procedure",
            "ref_spans": [
                {
                    "start": 79,
                    "end": 83,
                    "type": "bibr",
                    "text": "(23)"
                }
            ]
        },
        {
            "text": "For each sequence pair, we calculate the match probabilities of residue pairs using one of the HMMs. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "These probability matrices are subject to consistency measure, which involves multiplications of the matrices (23). ",
            "section": "Multiple sequence alignment procedure",
            "ref_spans": [
                {
                    "start": 110,
                    "end": 114,
                    "type": "bibr",
                    "text": "(23)"
                }
            ]
        },
        {
            "text": "Finally, MUMMALS progressively aligns the sequences guided by the second tree using the consistencybased scoring function.",
            "section": "Multiple sequence alignment procedure",
            "entity_spans": [
                {
                    "start": 9,
                    "end": 16,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-12",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "To properly balance alignment speed and accuracy, we have also applied a two-stage alignment strategy similar to the one used in our program PCMA (32). ",
            "section": "Multiple sequence alignment procedure",
            "ref_spans": [
                {
                    "start": 146,
                    "end": 150,
                    "type": "bibr",
                    "text": "(32)"
                }
            ],
            "entity_spans": [
                {
                    "start": 141,
                    "end": 145,
                    "type": "software",
                    "rawForm": "PCMA",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-13",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "In the first stage, highly similar sequences are progressively aligned in a fast way without consistency scoring. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "The scoring function in this stage is a weighted sum-of-pairs measure of BLOSUM62 scores (16). ",
            "section": "Multiple sequence alignment procedure",
            "ref_spans": [
                {
                    "start": 89,
                    "end": 93,
                    "type": "bibr",
                    "text": "(16)"
                }
            ]
        },
        {
            "text": "If two neighboring groups on a tree have an average sequence identity higher than a certain threshold, they are aligned in this fast way. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "The result of the first stage is a set of pre-aligned groups that are relatively divergent from each other. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "In the second alignment stage, one representative sequence is selected from each pre-aligned group, and these representative sequences are subject to the more time-consuming probabilistic consistency measure. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "Then the representatives are aligned progressively according to the consistency-based scoring function. ",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "Finally, the prealigned groups obtained in the first stage are merged according to the alignment of the representatives to obtain the final alignment of all sequences.",
            "section": "Multiple sequence alignment procedure"
        },
        {
            "text": "To test multiple sequence alignment programs, we used the same representative SCOP pairs selected for pairwise alignment tests (Supplementary Table S1). ",
            "section": "Performance assessment of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 127,
                    "end": 151,
                    "type": "table",
                    "text": "(Supplementary Table S1)"
                }
            ]
        },
        {
            "text": "For each domain, we added up to 24 homologs, which were obtained from PSI-BLAST searches (1) with five iterations and an E-value cut-off of 0.0001. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "We removed highly similar sequences (>97% identity) and sequence fragments (coverage less than half of the query) before randomly selecting up to 24 homologs. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "This procedure is similar to the one used to build the PREFAB database (10). ",
            "section": "Performance assessment of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 71,
                    "end": 75,
                    "type": "bibr",
                    "text": "(10)"
                }
            ]
        },
        {
            "text": "Similar to pairwise alignment tests, the 4-fold cross validation approach is applied to the tests of MUMMALS.",
            "section": "Performance assessment of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 101,
                    "end": 108,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-14",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Two large testing datasets compiled by other researchers were used as well. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "One is the SABmark database (version 1.65) (33), which is based on homologous SCOP domains, and the other is PREFAB database (version 4) (10), which is based on structural alignments and homologous sequences from database searches. ",
            "section": "Performance assessment of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 43,
                    "end": 47,
                    "type": "bibr",
                    "text": "(33)"
                }
            ]
        },
        {
            "text": "Alignment quality scores (Q-scores) were calculated using the built-in programs in SABmark and PREFAB packages. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "The Q-score is the fraction of the number of correctly aligned residue pairs in the test alignment to the total number of aligned residue pairs in the reference alignment. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "Additional series of smaller datasets constructed byMAFFT authors (11) were 55 HOMSTRAD (34) structural alignments with various numbers of close homologs added ('HOM + X', 'X' is the number of close homologs added and is 0, 20, 50 or 100). ",
            "section": "Performance assessment of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 52,
                    "end": 57,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-15",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "To obtain more balanced datasets from 'HOM + 100', we used BLASTCLUST to cluster sequences in any 'HOM + 100' alignment at 50 or 60% identity level, and selected up to two homologs in each sequence cluster. ",
            "section": "Performance assessment of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 59,
                    "end": 69,
                    "type": "software",
                    "rawForm": "BLASTCLUST",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-16",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The resulting datasets are called 'HOM + 100_bcl50' and 'HOM + 100_bcl60'. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "We also tested programs on 218 BAliBASE3.0 (35) alignments with full-length sequences. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "The column scores (the fraction of entirely correct columns) were reported in addition to Q-scores for BAliBASE3.0. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "Wilcoxon signed-ranks tests were performed to calculate statistical significance of comparisons between alignment programs, which include ProbCons (version 1.10) (23),MAFFT (version 5.667) (11) with several options, MUSCLE (version 3.52) (10) and ClustalW (version 1.83) (7).",
            "section": "Performance assessment of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 189,
                    "end": 193,
                    "type": "bibr",
                    "text": "(11)"
                },
                {
                    "start": 271,
                    "end": 274,
                    "type": "bibr",
                    "text": "(7)"
                }
            ],
            "entity_spans": [
                {
                    "start": 138,
                    "end": 146,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-124",
                    "cert": "1.0"
                },
                {
                    "start": 156,
                    "end": 160,
                    "type": "version",
                    "rawForm": "1.10",
                    "resp": "#annotator12",
                    "id": "#d3cf53c613-software-124"
                },
                {
                    "start": 167,
                    "end": 172,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-125",
                    "cert": "1.0"
                },
                {
                    "start": 182,
                    "end": 187,
                    "type": "version",
                    "rawForm": "5.667",
                    "resp": "#annotator12",
                    "id": "#d3cf53c613-software-125"
                },
                {
                    "start": 216,
                    "end": 222,
                    "type": "software",
                    "rawForm": "MUSCLE",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-126",
                    "cert": "1.0"
                },
                {
                    "start": 232,
                    "end": 236,
                    "type": "version",
                    "rawForm": "3.52",
                    "resp": "#annotator12",
                    "id": "#d3cf53c613-software-126"
                },
                {
                    "start": 247,
                    "end": 255,
                    "type": "software",
                    "rawForm": "ClustalW",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-127",
                    "cert": "1.0"
                },
                {
                    "start": 265,
                    "end": 269,
                    "type": "version",
                    "rawForm": "1.83",
                    "resp": "#annotator12",
                    "id": "#d3cf53c613-software-127"
                }
            ]
        },
        {
            "text": "In addition to Q-score, we utilized a reference-independent assessment of alignment quality from a structural modeling perspective. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "Given a test sequence alignment of two SCOP domains with known structures, corresponding Ca atoms in aligned residue pairs were used as equivalent points for structural superposition to minimize the root mean square distance (RMSD). ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "The structural similarity scores were calculated based on this forced superposition of the aligned residue pairs. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "The following scores were used: DALI Z-score (36), GDT score (37), TM-score (38), 3D-score (39) and two LiveBench contact scores (39) (see Supplementary Data for the equations of 3D-score and LiveBench contact scores). ",
            "section": "Performance assessment of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 76,
                    "end": 80,
                    "type": "bibr",
                    "ref_id": "b38",
                    "text": "(38)"
                }
            ]
        },
        {
            "text": "An alignment with better quality should have a higher similarity of the two structures superimposed in a sequencedependent way described above, and thus have a larger structural score. ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "Two reference-independent sequence similarity scores were also calculated for aligned residue pairs in a test alignment: sequence identity and average BLOSUM62 scores (16). ",
            "section": "Performance assessment of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 167,
                    "end": 171,
                    "type": "bibr",
                    "ref_id": "b15",
                    "text": "(16)"
                }
            ]
        },
        {
            "text": "Additionally, each of the scores was rescaled to take into account a random model (the reversed alignment), self-comparisons and alignment coverage (see Supplementary Data for details). ",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "Such rescaling places each score between 0 (random match) and 1 (self-match) and makes different scoring schemes more comparable to each other.",
            "section": "Performance assessment of multiple sequence alignment programs"
        },
        {
            "text": "The MUMMALS multiple alignment web server is at:http://prodata.swmed.edu/mummals/, with the source code of MUMMALS available for download.",
            "section": "Availability",
            "entity_spans": [
                {
                    "start": 4,
                    "end": 11,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-128",
                    "cert": "1.0"
                },
                {
                    "start": 48,
                    "end": 80,
                    "type": "url",
                    "rawForm": "http://prodata.swmed.edu/mummals",
                    "resp": "#curator",
                    "id": "#d3cf53c613-software-128"
                },
                {
                    "start": 107,
                    "end": 114,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#curator",
                    "used": true,
                    "id": "d3cf53c613-software-simple-27",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Applying a cross validation approach, we tested our pairwise alignment HMMs on representative domain pairs from the ASTRAL SCOP40 dataset (Table 1 and Supplementary  Table S3). ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 138,
                    "end": 174,
                    "type": "table",
                    "ref_id": "tab_0",
                    "text": "(Table 1 and Supplementary  Table S3"
                }
            ]
        },
        {
            "text": "Model HMM_1_1_0 represents the simplest model with a single match state (Figure 1a). ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 72,
                    "end": 82,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "(Figure 1a"
                }
            ]
        },
        {
            "text": "It can serve as a control for more complex models, including HMM_1_1_1 that assigns residue pairs in unaligned regions to a different match state, HMM_1_3_1 that captures secondary structure information, HMM_3_1_1 that captures solvent accessibility information, and HMM_3_3_1 that has both types of local structural information (see Materials and Methods).",
            "section": "Complex HMMs with local structural information improve pairwise alignments"
        },
        {
            "text": "Several conclusions can be drawn from Table 1 and Supplementary Table S3. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 38,
                    "end": 71,
                    "type": "table",
                    "text": "Table 1 and Supplementary Table S"
                }
            ]
        },
        {
            "text": "(i) For each testing dataset, the best performance is usually achieved with parameters estimated on the training dataset with the same identity range (Supplementary Table S3). ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 165,
                    "end": 174,
                    "type": "table",
                    "text": "Table S3)"
                }
            ]
        },
        {
            "text": "For example, models trained on alignments with the highest identity range (20-40%) exhibit best performance on testing alignments in that range. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments"
        },
        {
            "text": "Thus residue substitution and insertion/deletion statistics are different for sequence pairs with different degrees of similarity, in agreement with other reports (16,17). ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 163,
                    "end": 170,
                    "type": "bibr",
                    "text": "(16,17)"
                }
            ]
        },
        {
            "text": "Although models trained on pairs with the lowest identity range can perform slightly better (2%) on representatives in that range, they perform much worse on alignments with the highest identity range (nearly 10% decrease as compared to models trained on pairs with the highest identity range). ",
            "section": "Complex HMMs with local structural information improve pairwise alignments"
        },
        {
            "text": "(ii) More complex HMMs improve alignment quality. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments"
        },
        {
            "text": "For example, HMM_1_3_1 performs better than HMM_1_1_1 in almost every case. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments"
        },
        {
            "text": "HMM_1_3_1 performs almost equally well to HMM_3_3_1. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments"
        },
        {
            "text": "(iii) Our models trained on pairs with 20-40% identity range perform better than several other aligners, such as ProbCons (23), MAFFT (11) with several option, MUSCLE (10) and ClustalW (7) on any testing dataset. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 167,
                    "end": 171,
                    "type": "bibr",
                    "text": "(10)"
                },
                {
                    "start": 185,
                    "end": 188,
                    "text": "(7)"
                }
            ],
            "entity_spans": [
                {
                    "start": 113,
                    "end": 121,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-28",
                    "cert": "1.0"
                },
                {
                    "start": 128,
                    "end": 133,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-29",
                    "cert": "1.0"
                },
                {
                    "start": 160,
                    "end": 166,
                    "type": "software",
                    "rawForm": "MUSCLE",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-30",
                    "cert": "1.0"
                },
                {
                    "start": 176,
                    "end": 184,
                    "type": "software",
                    "rawForm": "ClustalW",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-31",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Although the simplest model HMM_1_1_0 has the same model structure as the one used in ProbCons, it gives 3-4% increase over ProbCons for every testing dataset. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "entity_spans": [
                {
                    "start": 86,
                    "end": 94,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-32",
                    "cert": "1.0"
                },
                {
                    "start": 124,
                    "end": 132,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-33",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The best models HMM_1_3_1 and HMM_3_3_1 give 4-5% increase over ProbCons. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "entity_spans": [
                {
                    "start": 64,
                    "end": 72,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-34",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "(iv) When trained on BAliBASE2.0, HMM_1_1_0 and HMM_1_1_1 exhibit inferior performance compared to the same models trained on SCOP domain pairs with identity above 20%, suggesting that SCOP domain pairs with above 20% identity is a better training dataset than BAliBASE2.0. ",
            "section": "Complex HMMs with local structural information improve pairwise alignments"
        },
        {
            "text": "The two models (especially HMM_1_1_1) trained on BAliBASE2.0 nevertheless give slightly better performance than ProbCons, which was also trained on BAliBASE2.0 but with a different training method (unsupervised learning) (23).",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 221,
                    "end": 225,
                    "type": "bibr",
                    "text": "(23)"
                }
            ],
            "entity_spans": [
                {
                    "start": 112,
                    "end": 120,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-35",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "To further compare the performance of our HMMs and the one used in ProbCons, we tested sequence pairs from BAliBASE2.0, on which the HMM in ProbCons was trained (Supplementary Table S ",
            "section": "Complex HMMs with local structural information improve pairwise alignments",
            "ref_spans": [
                {
                    "start": 176,
                    "end": 183,
                    "type": "table",
                    "text": "Table S"
                }
            ],
            "entity_spans": [
                {
                    "start": 67,
                    "end": 75,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-36",
                    "cert": "1.0"
                },
                {
                    "start": 140,
                    "end": 148,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#curator",
                    "used": true,
                    "id": "d3cf53c613-software-simple-37",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "We implemented our HMM models in a multiple sequence alignment program based on probabilistic consistency.  ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Our model is statistically better than the best of other programs according to Wilcoxon signed-rank test (P < 0.015).",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "We implemented our HMM models in a multiple sequence alignment program based on probabilistic consistency. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Our program is named MUMMALS, standing for MUltiple alignment with Multiple MAtch state models of Local Structure. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 21,
                    "end": 28,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-38",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "MUMMALS was compared to several other programs, such as ProbCons (23), MAFFT (11), MUSCLE (10)and ClustalW (7). ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 65,
                    "end": 69,
                    "text": "(23)"
                },
                {
                    "start": 107,
                    "end": 110,
                    "text": "(7)"
                }
            ],
            "entity_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-39",
                    "cert": "1.0"
                },
                {
                    "start": 56,
                    "end": 64,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-40",
                    "cert": "1.0"
                },
                {
                    "start": 71,
                    "end": 76,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-41",
                    "cert": "1.0"
                },
                {
                    "start": 83,
                    "end": 89,
                    "type": "software",
                    "rawForm": "MUSCLE",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-42",
                    "cert": "1.0"
                },
                {
                    "start": 98,
                    "end": 106,
                    "type": "software",
                    "rawForm": "ClustalW",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-43",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "We assembled testing datasets of multiple sequences by adding homologs to pairwise alignments of SCOP domain pairs (see Materials and Methods). ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "For three testing datasets with identity ranges below 20%,MUMMALS shows 3-4% increase of average Q-score over ProbCons when the best-performing HMMs are selected (HMM_1_3_1 and HMM_3_3_1) Table 2). ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 188,
                    "end": 196,
                    "type": "table",
                    "text": "Table 2)"
                }
            ],
            "entity_spans": [
                {
                    "start": 58,
                    "end": 65,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator5",
                    "used": true,
                    "id": "d3cf53c613-software-simple-44",
                    "cert": "1.0"
                },
                {
                    "start": 110,
                    "end": 118,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator5",
                    "used": true,
                    "id": "d3cf53c613-software-simple-45",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "For the dataset with identity range above 20%, the improvement is less prominent (1%), although still statistically significant (P < 0.005). ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Among the other programs tested (ProbCons, several options of MAFFT, MUSCLE and ClustalW), MAFFT with options [lg]insi usually gives the best performance. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 33,
                    "end": 41,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-46",
                    "cert": "1.0"
                },
                {
                    "start": 62,
                    "end": 67,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-47",
                    "cert": "1.0"
                },
                {
                    "start": 69,
                    "end": 75,
                    "type": "software",
                    "rawForm": "MUSCLE",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-48",
                    "cert": "1.0"
                },
                {
                    "start": 80,
                    "end": 88,
                    "type": "software",
                    "rawForm": "ClustalW",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-49",
                    "cert": "1.0"
                },
                {
                    "start": 91,
                    "end": 96,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-50",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Our program still outperforms any MAFFT option by 2% for the three datasets with identity ranges below 20%. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 34,
                    "end": 39,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-51",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The other two large datasets we have used for testing are PREFAB version 4 (PREFAB4) (10) and SABmark version 1.65 (33). ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 115,
                    "end": 119,
                    "type": "bibr",
                    "text": "(33)"
                }
            ]
        },
        {
            "text": "PREFAB4 consists of 1682 alignments based on the consensus of two structural alignment programs SOFI (40) and CE (41), with up to 24 homologous sequences added from database searches. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 101,
                    "end": 105,
                    "type": "bibr",
                    "text": "(40)"
                },
                {
                    "start": 113,
                    "end": 117,
                    "type": "bibr",
                    "text": "(41)"
                }
            ],
            "entity_spans": [
                {
                    "start": 96,
                    "end": 100,
                    "type": "software",
                    "rawForm": "SOFI",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-52",
                    "cert": "1.0"
                },
                {
                    "start": 110,
                    "end": 112,
                    "type": "software",
                    "rawForm": "CE",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-53",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "SABmark database has two alignment sets. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "The 'twilight zone' set contains SCOP (version 1.65) domain pairs with very low-to-low similarity and the 'superfamily' set contains SCOP domains with low to intermediate similarity. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "The reference alignments in SABmark were also derived from the consensus of SOFI and CE. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 76,
                    "end": 80,
                    "type": "software",
                    "rawForm": "SOFI",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-54",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The comparison of MUMMALS with the other programs on PREFAB4 and SABmark shows similar trends as seen in datasets assembled by us. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 18,
                    "end": 25,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-55",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "MUMMALS with the best-performing models (HMM_1_3_1 and HMM_3_3_1) gives the highest average Q-scores, with 2-4% increase over ProbCons and 1% increase over the best of theMAFFT series (Table 2).",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 184,
                    "end": 193,
                    "type": "table",
                    "text": "(Table 2)"
                }
            ],
            "entity_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-56",
                    "cert": "1.0"
                },
                {
                    "start": 126,
                    "end": 134,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-57",
                    "cert": "1.0"
                },
                {
                    "start": 171,
                    "end": 176,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-58",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "MUMMALS performs better than other programs for testing datasets 'HOM + 0', 'HOM + 20' and 'HOM + 50'. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-59",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The results of MUMMALS on 'HOM + 100' are inferior to those on 'HOM + 50', which is in contrast to MAFFT that shows consistent increase of accuracy when more homologs are added. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 15,
                    "end": 22,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-60",
                    "cert": "1.0"
                },
                {
                    "start": 99,
                    "end": 104,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-61",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "We reason that such a problem of MUMMALS is due to excessive number of close homologs in some sequence subgroups in 'HOM + 100' test cases, since our consistency measure does not take into account similarities among the testing sequences. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 33,
                    "end": 40,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-62",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "To test this hypothesis, we removed closely related sequences in 'HOM + 100' alignment at 50 or 60% identity level (datasets 'HOM + 100_bcl50' and 'HOM + 100_bcl60'). ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "The remaining sequences are more balanced in terms of similarities among them. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "We indeed obtained the best MUMMALS performance after removing closely related sequences (Supplementary Table S 5). ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 104,
                    "end": 111,
                    "type": "table",
                    "text": "Table S"
                },
                {
                    "start": 112,
                    "end": 114,
                    "type": "bibr",
                    "text": "5)"
                }
            ],
            "entity_spans": [
                {
                    "start": 28,
                    "end": 35,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-63",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "A similar degrading effect of closely related sequences is observed for ProbCons, which is also based on probabilistic consistency.",
            "section": "MUMMALS and multiple sequence alignment tests",
            "entity_spans": [
                {
                    "start": 72,
                    "end": 80,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-64",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Recently, BAliBASE3.0 multiple alignment benchmark has been released (35). ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 69,
                    "end": 73,
                    "type": "bibr",
                    "ref_id": "b35",
                    "text": "(35)"
                }
            ]
        },
        {
            "text": "We tested the programs on 218 BAliBASE3.0 alignments with full-length sequences. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "These alignments represent difficult cases since N-or C-terminal non-homologous regions are included for some sequences. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "The average Q-scores and column scores (the fraction of entirely correctly columns) in manually defined core blocks are reported in Table 2. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 132,
                    "end": 139,
                    "type": "table",
                    "ref_id": "tab_1",
                    "text": "Table 2"
                }
            ]
        },
        {
            "text": "For Q-score measurement of alignment quality, the Wilcoxon signed rank tests show thatMUMMALS with best-performing models (HMM_3_3_1 or HMM_1_3_1) is statistically better than other programs, albeit MUMMALS does not have the highest average Q-score. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "For column score measurement of alignment quality, MUMMALS with HMM_3_3_1 or HMM_1_3_1 has a lower average column score than MAFFT-[le]insi andProbCons, but the difference between them is not statisticallysignificant. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "In fact MUMMALS with HMM_3_3_1 outperforms MAFFT-linsi (having the best average scores) in 106 cases while MAFFT-linsi performs better in 67 cases, measured by column score. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "We found that the major cause of lower average column score of MUMMALS is due to a few alignments that MUMMALS gives considerably lower scores as compared to MAFFT-linsi (10 alignments with a score difference larger than 0.5). ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Manual inspections of these alignments revealed some interesting scenarios. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "In some cases, the low scores ofMUMMALS are due to wrong alignment of a few divergent sequences, some of which have long extensions at the ends. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Column score is very sensitive in such situations, since a low score is produced even if only one sequence is incorrectly aligned in many places. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "MAFFT alignments with local options ([le]insi) indeed show advantage in these situations (11). In several other cases, MUMMALS produces structurally meaningful alignments that are scored very low since they are not consistent with the reference alignments (Supplementary Figure S1 Figure S1a). ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 93,
                    "end": 97,
                    "type": "bibr",
                    "ref_id": "b10",
                    "text": "(11)"
                },
                {
                    "start": 275,
                    "end": 285,
                    "type": "figure",
                    "ref_id": "fig_2",
                    "text": "Figure S1)"
                }
            ]
        },
        {
            "text": "One group contains three domains in the order of 'fer2', 'FAD_binding_6' (oxidoreductase FAD-binding domain) and 'NAD_binding_1' (oxidoreductase NAD-binding domain). ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "The other group contains the same three domains, but in the order of 'FAD_binding_6', 'NAD_binding_1' and 'fer2'. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 2,
                    "end": 6,
                    "type": "bibr",
                    "ref_id": "b42",
                    "text": "(42)"
                }
            ]
        },
        {
            "text": "MUMMALS aligns 'FAD_binding_6' and 'NAD_binding_1' for the two groups and thus misaligned the 'fer2' domain. ",
            "section": "MUMMALS and multiple sequence alignment tests",
            "ref_spans": [
                {
                    "start": 52,
                    "end": 63,
                    "type": "figure",
                    "ref_id": "fig_0",
                    "text": "Figure S1a)"
                }
            ]
        },
        {
            "text": "Since the reference-dependent evaluation is based on 'fer2' domain,MUMMALS alignment gets a column score of zero. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Another evaluation problem is caused by domain duplication or repeats, as exemplified by test case BB40040. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Most of BB40040 sequences have a single domain of carbonic anhydrase. ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "However, the sequence 'CAH_DUNSA' has two such domains (Supplementary Figure S1b). ",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "The reference alignment aligns the first domain of 'CAH_DUNSA' to other sequences while MUMMALS aligns most of the second domain to other sequences, resulting in a low column score.",
            "section": "MUMMALS and multiple sequence alignment tests"
        },
        {
            "text": "Model HMM_1_3_1 has hidden secondary structuredependent match states that are used in alignment construction. ",
            "section": "Secondary structure prediction and alignment quality"
        },
        {
            "text": "However, secondary structure predictions are not explicitly generated and remain 'hidden' in the alignment process. ",
            "section": "Secondary structure prediction and alignment quality"
        },
        {
            "text": "A posterior decoding technique can be applied to this model to output explicit secondary structure predictions (see Supplementary Data for details). ",
            "section": "Secondary structure prediction and alignment quality"
        },
        {
            "text": "The prediction accuracy is 60% on representative SCOP domains (Supplementary Table S 6). ",
            "section": "Secondary structure prediction and alignment quality",
            "ref_spans": [
                {
                    "start": 62,
                    "end": 84,
                    "type": "table",
                    "text": "(Supplementary Table S"
                },
                {
                    "start": 85,
                    "end": 87,
                    "type": "bibr",
                    "text": "6)"
                }
            ]
        },
        {
            "text": "This prediction accuracy is lower than many advanced methods, such as PSI-PRED (43), which use homologs from database searches to enhance the secondary structure signal of a single sequence. ",
            "section": "Secondary structure prediction and alignment quality",
            "ref_spans": [
                {
                    "start": 79,
                    "end": 83,
                    "type": "bibr",
                    "text": "(43)"
                }
            ],
            "entity_spans": [
                {
                    "start": 70,
                    "end": 78,
                    "type": "software",
                    "rawForm": "PSI-PRED",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-82",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Our HMM-based prediction of secondary structure corresponds to a single sequence predictor, since position-specific information from multiple homologs is not used. ",
            "section": "Secondary structure prediction and alignment quality"
        },
        {
            "text": "The prediction accuracy of model HMM_1_3_1 is comparable to other methods that generate predictions based on a single sequence (44).",
            "section": "Secondary structure prediction and alignment quality",
            "ref_spans": [
                {
                    "start": 127,
                    "end": 131,
                    "type": "bibr",
                    "text": "(44)"
                }
            ]
        },
        {
            "text": "If secondary structure information is known for one of the aligned sequences, model HMM_1_3_1 can be modified to restrict the hidden state path to follow the experimental secondary structure (see Supplementary Data). ",
            "section": "Secondary structure prediction and alignment quality"
        },
        {
            "text": "Using real secondary structural information in MUMMALS with model HMM_1_3_1, we were able to obtain an average Q-score increase of 3% on SABmark datasets (Supplementary Table S8). ",
            "section": "Secondary structure prediction and alignment quality",
            "ref_spans": [
                {
                    "start": 169,
                    "end": 178,
                    "type": "table",
                    "text": "Table S8)"
                }
            ],
            "entity_spans": [
                {
                    "start": 47,
                    "end": 54,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-83",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Such a result suggests that one limitation ofMUMMALS is the low accuracy of the implicit secondary structure prediction. ",
            "section": "Secondary structure prediction and alignment quality",
            "entity_spans": [
                {
                    "start": 45,
                    "end": 52,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-84",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Further improvement of alignment quality should be possible with more accurate secondary structure predictions that explore database homologs.",
            "section": "Secondary structure prediction and alignment quality"
        },
        {
            "text": "All previously described tests are based on comparison with reference alignments that are treated as 'gold standards'. ",
            "section": "Evaluation of programs with reference-independent scores"
        },
        {
            "text": "It is unclear how the quality of reference 'gold' alignments influences the ranking of alignment programs (45). ",
            "section": "Evaluation of programs with reference-independent scores",
            "ref_spans": [
                {
                    "start": 106,
                    "end": 110,
                    "type": "bibr",
                    "text": "(45)"
                }
            ]
        },
        {
            "text": "Several examples from BAliBASE3.0 show some problems with referencedependent evaluation. ",
            "section": "Evaluation of programs with reference-independent scores"
        },
        {
            "text": "Since the structures of all domains in our testing datasets are known, we can evaluate the quality of a test alignment using reference-independent scores that reflect the similarity between two structures after they are superimposed according to aligned residues in the test alignment. ",
            "section": "Evaluation of programs with reference-independent scores"
        },
        {
            "text": "The structural scores we have used are: DALI Z-score, TM-score, GDT-TS score, 3D-score and two LiveBench contact scores. ",
            "section": "Evaluation of programs with reference-independent scores"
        },
        {
            "text": "From Table 3, it is clear that MUMMALS with the best-performing models (HMM_1_3_1 and HMM_3_3_1) produces higher average referenceindependent structural scores than other programs for divergent domain pairs (identity below 20%), suggesting that our HMM models produce potentially more useful alignments in terms of structure modeling. ",
            "section": "Evaluation of programs with reference-independent scores",
            "ref_spans": [
                {
                    "start": 5,
                    "end": 12,
                    "type": "table",
                    "text": "Table 3"
                }
            ],
            "entity_spans": [
                {
                    "start": 31,
                    "end": 38,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-85",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Interestingly, MUMMALS does not produce the highest reference-independent sequencebased similarity scores (sequence identity and BLOSUM62 scores of aligned residue pairs). ",
            "section": "Evaluation of programs with reference-independent scores",
            "entity_spans": [
                {
                    "start": 15,
                    "end": 22,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-86",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "This result suggests that minimization of these sequence similarity measures alone does not lead to better alignment quality for divergent sequences. ",
            "section": "Evaluation of programs with reference-independent scores"
        },
        {
            "text": "Our experiments with reference-independent evaluation shows good correlation with reference-dependent results described above, thus rendering a 'gold standard' reference unnecessary for alignment evaluation.",
            "section": "Evaluation of programs with reference-independent scores"
        },
        {
            "text": "MUMMALS shows improvement over MAFFT and Prob- Cons by only a few percent in terms of average alignment quality scores on various testing datasets. ",
            "section": "Pairwise comparisons of multiple sequence aligners",
            "entity_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-87",
                    "cert": "1.0"
                },
                {
                    "start": 31,
                    "end": 36,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-88",
                    "cert": "1.0"
                },
                {
                    "start": 41,
                    "end": 51,
                    "type": "software",
                    "rawForm": "Prob- Cons",
                    "resp": "#curator",
                    "id": "d3cf53c613-software-simple-89"
                }
            ]
        },
        {
            "text": "Although this improvement is statistically significant and does not depend on the testing dataset (assembled by us, or by other researchers) or alignment quality measure (referencedependent Q-score, or reference-independent DALI Z-score, TM-score, GDT-TS, etc), it is not clear what these average scores actually represent. ",
            "section": "Pairwise comparisons of multiple sequence aligners"
        },
        {
            "text": "To gain more understanding, we directly compared alignment scores of different programs for individual domain pairs. ",
            "section": "Pairwise comparisons of multiple sequence aligners"
        },
        {
            "text": "Table 4 shows the number of alignments where one program performs better than another program by 10% or more (measured by Q-score or normalized TM-score) for 1207 divergent SCOP40 pairs with added homologs (sequence identity <20%). ",
            "section": "Pairwise comparisons of multiple sequence aligners",
            "ref_spans": [
                {
                    "start": 0,
                    "end": 7,
                    "type": "table",
                    "text": "Table 4"
                }
            ]
        },
        {
            "text": "The numbers for such differences among MUMMALS family of programs with five different HMMs are relatively small, suggesting that MUMMALS with different HMMs generates alignments not that different from each other. ",
            "section": "Pairwise comparisons of multiple sequence aligners",
            "entity_spans": [
                {
                    "start": 39,
                    "end": 46,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-90",
                    "cert": "1.0"
                },
                {
                    "start": 129,
                    "end": 136,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#curator",
                    "used": true,
                    "id": "d3cf53c613-software-simple-91",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "The differences betweenMUMMALS and other programs are significantly larger. ",
            "section": "Pairwise comparisons of multiple sequence aligners",
            "entity_spans": [
                {
                    "start": 23,
                    "end": 30,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-92",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "For example, MUMMALS with HMM_3_3_1 has a large Q-score increase (>10%) over ProbCons on 201 alignments, while ProbCons is better by 10% or more on 62 alignments. ",
            "section": "Pairwise comparisons of multiple sequence aligners",
            "entity_spans": [
                {
                    "start": 13,
                    "end": 20,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-93",
                    "cert": "1.0"
                },
                {
                    "start": 77,
                    "end": 85,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-94",
                    "cert": "1.0"
                },
                {
                    "start": 111,
                    "end": 119,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#curator",
                    "used": true,
                    "id": "d3cf53c613-software-simple-95",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "For MUMMALS with HMM_3_3_1 and MAFFT-ginsi, these numbers are 199 and 117, respectively. ",
            "section": "Pairwise comparisons of multiple sequence aligners",
            "entity_spans": [
                {
                    "start": 4,
                    "end": 11,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-96",
                    "cert": "1.0"
                },
                {
                    "start": 31,
                    "end": 42,
                    "type": "software",
                    "rawForm": "MAFFT-ginsi",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-97",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Our comparisons thus suggest that different programs can explore somewhat different regions in alignment space, and the program giving lower average performance may be capable of generating better alignments in many cases. ",
            "section": "Pairwise comparisons of multiple sequence aligners"
        },
        {
            "text": "However, selection of a better alignment in the absence of structural comparison is still a difficult task (46).",
            "section": "Pairwise comparisons of multiple sequence aligners",
            "ref_spans": [
                {
                    "start": 107,
                    "end": 111,
                    "type": "bibr",
                    "text": "(46)"
                }
            ]
        },
        {
            "text": "ProbCons (23) and MAFFT (11) are two of the most accurate multiple sequence alignment programs that explore only sequence information. ",
            "section": "Comparison of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 24,
                    "end": 28,
                    "type": "bibr",
                    "text": "(11)"
                }
            ],
            "entity_spans": [
                {
                    "start": 0,
                    "end": 8,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-98",
                    "cert": "1.0"
                },
                {
                    "start": 18,
                    "end": 23,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-99",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "They use different strategies to improve the accuracy of progressive alignment. ",
            "section": "Comparison of multiple sequence alignment programs"
        },
        {
            "text": "ProbCons mainly relies on the consistency-based scoring function andMAFFT utilizes iterative refinement. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 0,
                    "end": 8,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-100",
                    "cert": "1.0"
                },
                {
                    "start": 68,
                    "end": 73,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-101",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "MAFFT's scoring function is a weighted sum-of-pairs score of BLOSUM62, a general amino acid substitution matrix. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 0,
                    "end": 5,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-102",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Recent versions of MAFFT enhance performance by exploring aligned core regions with a simple consistency measure (11). ",
            "section": "Comparison of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 113,
                    "end": 117,
                    "type": "bibr",
                    "text": "(11)"
                }
            ],
            "entity_spans": [
                {
                    "start": 19,
                    "end": 24,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-103",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "However, the time-consuming ProbCons-type consistency operations on sequence triplets are not implemented in MAFFT. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 28,
                    "end": 36,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator5",
                    "used": true,
                    "id": "d3cf53c613-software-simple-104",
                    "cert": "1.0"
                },
                {
                    "start": 109,
                    "end": 114,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-105",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Our results show that MUMMALS based on probabilistic consistency can perform better than MAFFT, implying that consistency-based scoring function is superior to weighted sum-of-pairs measures of general substitution matrices.",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 22,
                    "end": 29,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-106",
                    "cert": "1.0"
                },
                {
                    "start": 89,
                    "end": 94,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-107",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Among existing multiple aligners, MUMMALS is methodologically closest to ProbCons. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 34,
                    "end": 41,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-108",
                    "cert": "1.0"
                },
                {
                    "start": 73,
                    "end": 81,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-109",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "However, we implement HMMs that are different from the one used in ProbCons in three aspects. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 67,
                    "end": 75,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-110",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "First, we introduce more complex model structures by increasing the number of match state types. ",
            "section": "Comparison of multiple sequence alignment programs"
        },
        {
            "text": "While HMM_1_1_0, used mainly as a control, has the same model structure as the one in ProbCons, the other four models (HMM_1_1_1, HMM_1_3_1, HMM_3_1_1 and HMM_3_3_1) incorporate more match states, which take into account residue substitution differences in unaligned regions and aligned core blocks, as well as local structural differences in aligned core blocks. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 86,
                    "end": 94,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-111",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Second, we have estimated model parameters from DaliLite structural alignments of divergent SCOP domains (<40% identity), while the training data of ProbCons are from BAliBASE2.0. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 48,
                    "end": 56,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-112",
                    "cert": "1.0"
                },
                {
                    "start": 149,
                    "end": 157,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-113",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Third, we applied a supervised learning approach to estimating model parameters from structural alignments that have known hidden state paths. ",
            "section": "Comparison of multiple sequence alignment programs"
        },
        {
            "text": "ProbCons applied an unsupervised learning approach (expectation maximization) to derive parameters without using reference alignments. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 0,
                    "end": 8,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-114",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Trained and tested on DaliLite structural alignments of SCOP40 domain pairs and on BAliBASE2.0 alignments, our models give better alignment quality than ProbCons and a number of other programs. ",
            "section": "Comparison of multiple sequence alignment programs",
            "entity_spans": [
                {
                    "start": 22,
                    "end": 30,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-115",
                    "cert": "1.0"
                },
                {
                    "start": 153,
                    "end": 161,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-116",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "We show that more complex models improve alignment quality and SCOP40 superfamily pairs with identity range of 20-40% provide a better training dataset than BAliBASE2.0 alignments.",
            "section": "Comparison of multiple sequence alignment programs"
        },
        {
            "text": "Although we do not explicitly perform structure prediction in the course of alignment construction, our HMMs with multiple match states have built-in information of residue substitution characteristics in distinct local structure environments. ",
            "section": "Comparison of multiple sequence alignment programs"
        },
        {
            "text": "Such information is learned from structural alignments in the training process and is encoded in the models. ",
            "section": "Comparison of multiple sequence alignment programs"
        },
        {
            "text": "Since these match states are hidden states, our HMMs construct alignments using only sequence information. ",
            "section": "Comparison of multiple sequence alignment programs"
        },
        {
            "text": "In this aspect, our method is different from some other methods that require direct use of real or predicted local structural information (19,47).",
            "section": "Comparison of multiple sequence alignment programs",
            "ref_spans": [
                {
                    "start": 138,
                    "end": 142,
                    "type": "bibr",
                    "ref_id": "b19",
                    "text": "(19,"
                },
                {
                    "start": 142,
                    "end": 145,
                    "type": "bibr",
                    "ref_id": "b47",
                    "text": "47)"
                }
            ]
        },
        {
            "text": "The trade-off for improvement of alignment quality with more complex model structures is more time for computation Table 3. ",
            "section": "Time complexity of HMMs and MUMMALS",
            "ref_spans": [
                {
                    "start": 115,
                    "end": 122,
                    "type": "table",
                    "text": "Table 3"
                }
            ]
        },
        {
            "text": "Assessment of multiple sequence alignment programs using reference-independent sequence and structural similarity scores on 1207 representative SCOP40 domain pairs with identity <20% a MUMMALS with this model is statistically better than the best of other programs according to Wilcoxon signed-rank test (P < 0.01).",
            "section": "Time complexity of HMMs and MUMMALS"
        },
        {
            "text": "The trade-off for improvement of alignment quality with more complex model structures is more time for computation(Supplementary Table S2). ",
            "section": "Method",
            "ref_spans": [
                {
                    "start": 129,
                    "end": 136,
                    "type": "table",
                    "text": "Table S"
                }
            ]
        },
        {
            "text": "HMM_3_3_1 (modeling both secondary structure and solvent accessibility) has the largest number of hidden states and is the most timeconsuming model, running about three times slower than HMM_1_3_1 (modeling only secondary structure). ",
            "section": "Method"
        },
        {
            "text": "However, the performance of these two models is fairly similar in pairwise or multiple sequence alignment tests (Tables 1-3). ",
            "section": "Method",
            "ref_spans": [
                {
                    "start": 112,
                    "end": 124,
                    "type": "table",
                    "text": "(Tables 1-3)"
                }
            ]
        },
        {
            "text": "HMM_3_1_1 (modeling only solvent accessibility) has the same time complexity as HMM_1_3_1, but usually shows slightly inferior performance to HMM_1_3_1. ",
            "section": "Method"
        },
        {
            "text": "These observations suggest that HMM_1_3_1 (modeling only secondary structure) is most efficient in balancing alignment accuracy and speed. ",
            "section": "Method"
        },
        {
            "text": "For MUMMALS, the rate-limiting steps are the computation of match probabilities using forward and backward algorithms (time order is N 2 *L 2 *K 2 , N: number of sequences, L: average length, K: number of hidden states), and the computation of the consistency-based scoring function, which requires operations on all sequence triplets (time order is N 3 *L 2 ). ",
            "section": "Method",
            "entity_spans": [
                {
                    "start": 4,
                    "end": 11,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-117",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "If probabilistic consistency measure is applied to every sequence pair, MUMMALS is much slower thanMAFFT, MUSCLE and ClustalW (Supplementary Table S9). ",
            "section": "Method",
            "ref_spans": [
                {
                    "start": 141,
                    "end": 150,
                    "type": "table",
                    "text": "Table S9)"
                }
            ],
            "entity_spans": [
                {
                    "start": 72,
                    "end": 79,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-118",
                    "cert": "1.0"
                },
                {
                    "start": 99,
                    "end": 104,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-119",
                    "cert": "1.0"
                },
                {
                    "start": 106,
                    "end": 112,
                    "type": "software",
                    "rawForm": "MUSCLE",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-120",
                    "cert": "1.0"
                },
                {
                    "start": 117,
                    "end": 125,
                    "type": "software",
                    "rawForm": "ClustalW",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-121",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "For example, the median CPU time of MUMMALS with model HMM_1_3_1 on 1785 SCOP40 pairs with added homologs is 174s per alignment, as compared to 2.5s forMAFFT with 'ginsi' option (on Redhat Enterprise Linux 3, AMD Opteron 2.0 GHz). ",
            "section": "Method",
            "entity_spans": [
                {
                    "start": 36,
                    "end": 43,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-122",
                    "cert": "1.0"
                },
                {
                    "start": 152,
                    "end": 157,
                    "type": "software",
                    "rawForm": "MAFFT",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-123",
                    "cert": "1.0"
                },
                {
                    "start": 182,
                    "end": 188,
                    "type": "publisher",
                    "rawForm": "Redhat",
                    "resp": "#curator",
                    "id": "#d3cf53c613-software-226"
                },
                {
                    "start": 189,
                    "end": 205,
                    "type": "software",
                    "rawForm": "Enterprise Linux",
                    "resp": "#curator",
                    "id": "d3cf53c613-software-226"
                },
                {
                    "start": 206,
                    "end": 207,
                    "type": "version",
                    "rawForm": "3",
                    "resp": "#curator",
                    "id": "#d3cf53c613-software-226"
                }
            ]
        },
        {
            "text": "Applying a two-stage alignment strategy similar to the one used in the program PCMA (32), we were able to make MUMMALS almost an order of magnitude faster while still maintaining the same level of alignment accuracy on SCOP testing datasets (Supplementary Table S9). ",
            "section": "Method",
            "ref_spans": [
                {
                    "start": 256,
                    "end": 264,
                    "type": "table",
                    "text": "Table S9"
                }
            ],
            "entity_spans": [
                {
                    "start": 79,
                    "end": 83,
                    "type": "software",
                    "rawForm": "PCMA",
                    "resp": "#annotator12",
                    "id": "d3cf53c613-software-simple-127",
                    "cert": "1.0"
                },
                {
                    "start": 111,
                    "end": 118,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-128",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Since highly similar sequences can be aligned accurately with a general scoring function (8), there is no need for all of them to be subject to the time-consuming consistency measure. ",
            "section": "Method",
            "ref_spans": [
                {
                    "start": 89,
                    "end": 92,
                    "type": "bibr",
                    "text": "(8)"
                }
            ]
        },
        {
            "text": "Although adding homologous sequences can in general improve alignment quality, our results on HOMSTRAD datasets suggest that proper balance of the similarity among the added homologs is also critical forMUMMALS as well as ProbCons.",
            "section": "Method",
            "entity_spans": [
                {
                    "start": 203,
                    "end": 210,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-129",
                    "cert": "1.0"
                },
                {
                    "start": 222,
                    "end": 230,
                    "type": "software",
                    "rawForm": "ProbCons",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-130",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Reference-dependent alignment evaluation relies on comparison of a test alignment to a reference alignment that is assumed to be correct. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "A commonly used alignment quality score is the fraction of correctly aligned residue pairs (Q-score). ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "More complex scores have been designed to take into account the relative shifts of residues (48,49). ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 92,
                    "end": 96,
                    "type": "bibr",
                    "ref_id": "b48",
                    "text": "(48,"
                },
                {
                    "start": 96,
                    "end": 99,
                    "type": "bibr",
                    "ref_id": "b49",
                    "text": "49)"
                }
            ]
        },
        {
            "text": "Even though structure-based alignments can serve as high-quality references, there are several well-known drawbacks. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "First, structural alignments generated by automatic programs could still contain errors, especially for pairs with relatively low structural similarity, i.e. careful expert-driven multilateral research may generate alignments more meaningful than those obtained by programs. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Second, defining the optimal structural alignment in certain regions is difficult for structurally divergent pairs, i.e. it is simply not possible to identify a single 'correct' alignment, which may not even exist. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Third, for multi-domain proteins, especially those with repeats or duplications, multiple ways of aligning structurally similar parts exist, resulting in a variety of reference  Table 1. ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 178,
                    "end": 185,
                    "type": "table",
                    "ref_id": "tab_0",
                    "text": "Table 1"
                }
            ]
        },
        {
            "text": "Each none-diagonal cell has two numbers separated by a slash.",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "The first number is the number of cases where the alignment quality score of the program listed to the left (in a row) is inferior to that of the program listed above (in a column) by 0.1 or more. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "The second number is the number of cases where the score of the 'row' program is better than that of the 'column' program by 0.1 or more. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "The alignment quality scores in the lower triangle and upper triangle are Q-scores and weighted and normalized TM-scores, respectively. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Comparisons of MUMMALS with the best model (HMM_3_3_1) with other programs are highlighted in bold.",
            "section": "Methods for alignment quality evaluation",
            "entity_spans": [
                {
                    "start": 15,
                    "end": 22,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-131",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "alignments that are correct from structure modeling perspective. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "However, structure superposition programs usually provide a single best alignment. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Some problems of referencedependent evaluations are illustrated by examples from BAliBASE3.0. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "For SCOP40 testing datasets, we found about 20 domain pairs for which all sequence-based programs failed to align a single position correctly according to DaliLite reference alignment. ",
            "section": "Methods for alignment quality evaluation",
            "entity_spans": [
                {
                    "start": 155,
                    "end": 163,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-132",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Manual inspection of these instances suggests that most of these domains involve structural repeats. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Many alignments produced by the tested programs did produce structurally meaningful results, but they had zero scores because they matched different repeats than those aligned by DaliLite. ",
            "section": "Methods for alignment quality evaluation",
            "entity_spans": [
                {
                    "start": 179,
                    "end": 187,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-133",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Reference-independent evaluation can avoid these drawbacks. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Although reference-independent evaluation is routinely used for assessing structure prediction models (50,51), it has not been frequently used in assessment of multiple sequence alignment programs (10,45). ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 102,
                    "end": 109,
                    "type": "bibr",
                    "text": "(50,51)"
                },
                {
                    "start": 197,
                    "end": 204,
                    "type": "bibr",
                    "text": "(10,45)"
                }
            ]
        },
        {
            "text": "Our results show that reference-independent evaluation using various structural similarity scores produces similar, if not identical, rankings of the programs compared to reference-dependent evaluations using DaliLite alignments (Table 3). ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 229,
                    "end": 237,
                    "type": "table",
                    "text": "(Table 3"
                }
            ],
            "entity_spans": [
                {
                    "start": 209,
                    "end": 217,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-134",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "On the one hand, this result suggests that a large collection of reference alignments generated by structure alignment programDaliLite are on average well-suited for assessment of alignment quality. ",
            "section": "Methods for alignment quality evaluation",
            "entity_spans": [
                {
                    "start": 126,
                    "end": 134,
                    "type": "software",
                    "rawForm": "DaliLite",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-135",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "On the other hand, it is probably unnecessary to have a set of 'gold standard' reference alignments. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Reference-independent evaluation through scoring superpositions generated according sequence-based alignments is an easier and maybe more fair method to assess alignment quality and to compare different aligners. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Therefore, particularly when the size of a testing dataset is large, improving reference alignment quality either by manual inspection and adjustment (30), or by using the consensus of structural aligners (10,33) is probably not necessary. ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 150,
                    "end": 154,
                    "type": "bibr",
                    "text": "(30)"
                }
            ]
        },
        {
            "text": "With reference-independent evaluation techniques, we even suggest bypassing the step of generating reference alignments.",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Reference-independent evaluation can avoid these drawbacks. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Although reference-independent evaluation is routinely used for assessing structure prediction models (50,51), it has not been frequently used in assessment of multiple sequence alignment programs (10,45). ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 197,
                    "end": 201,
                    "type": "bibr",
                    "ref_id": "b9",
                    "text": "(10,"
                },
                {
                    "start": 201,
                    "end": 204,
                    "type": "bibr",
                    "ref_id": "b45",
                    "text": "45)"
                }
            ]
        },
        {
            "text": "Our results show that reference-independent evaluation using various structural similarity scores produces similar, if not identical, rankings of the programs compared to reference-dependent evaluations using DaliLite alignments (Table 3). ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 229,
                    "end": 237,
                    "type": "table",
                    "text": "(Table 3"
                }
            ]
        },
        {
            "text": "On the one hand, this result suggests that a large collection of reference alignments generated by structure alignment program DaliLite are on average well-suited for assessment of alignment quality. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "On the other hand, it is probably unnecessary to have a set of 'gold standard' reference alignments. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Reference-independent evaluation through scoring superpositions generated according sequence-based alignments is an easier and maybe more fair method to assess alignment quality and to compare different aligners. ",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Therefore, particularly when the size of a testing dataset is large, improving reference alignment quality either by manual inspection and adjustment (30), or by using the consensus of structural aligners (10,33) is probably not necessary. ",
            "section": "Methods for alignment quality evaluation",
            "ref_spans": [
                {
                    "start": 150,
                    "end": 154,
                    "type": "bibr",
                    "ref_id": "b30",
                    "text": "(30)"
                }
            ]
        },
        {
            "text": "With reference-independent evaluation techniques, we even suggest bypassing the step of generating reference alignments.",
            "section": "Methods for alignment quality evaluation"
        },
        {
            "text": "Despite several percentage points' improvement in alignments provided by MUMMALS, alignment quality for divergent sequences (sequence identity <15%) is still not high, since only 50% or even less residue pairs on average are aligned correctly according to reference alignments Table 2). ",
            "section": "Multiple sequence alignment: still an unsolved problem",
            "ref_spans": [
                {
                    "start": 277,
                    "end": 286,
                    "type": "table",
                    "ref_id": "tab_1",
                    "text": "(Table 2)"
                }
            ]
        },
        {
            "text": "Although the best programs (MUMMALS,MAFFT and ProbCons) have limited differences in terms of average alignment quality score, they can produce quite different alignments for some sequence pairs (Table 4). ",
            "section": "Multiple sequence alignment: still an unsolved problem",
            "ref_spans": [
                {
                    "start": 196,
                    "end": 205,
                    "type": "table",
                    "ref_id": "tab_3",
                    "text": "(Table 4)"
                }
            ]
        },
        {
            "text": "It can be a good practice to use several aligners to generate alignments for divergent sequences. ",
            "section": "Multiple sequence alignment: still an unsolved problem"
        },
        {
            "text": "Manual examination of these alignments can be helpful in making expert judgments. ",
            "section": "Multiple sequence alignment: still an unsolved problem"
        },
        {
            "text": "Exploration of the consensus among programs is fruitful as well and is frequently used in meta-servers for structure prediction (52-54). Results of the meta-aligner M-COFFEE (46) as well as ours (data not shown, MUMMALS package contains a meta-program similar to M-COFFEE) suggest that combining different multiple sequence aligners can give significant but limited improvement of alignment quality.",
            "section": "Multiple sequence alignment: still an unsolved problem",
            "ref_spans": [
                {
                    "start": 130,
                    "end": 134,
                    "type": "bibr",
                    "ref_id": "b52",
                    "text": "(52)"
                },
                {
                    "start": 134,
                    "end": 138,
                    "type": "bibr",
                    "ref_id": "b53",
                    "text": "(53)"
                },
                {
                    "start": 138,
                    "end": 142,
                    "type": "bibr",
                    "ref_id": "b54",
                    "text": "(54)"
                }
            ]
        },
        {
            "text": "One advantage of MUMMALS is the use of HMMs with local structure information learned from structural alignments. ",
            "section": "Multiple sequence alignment: still an unsolved problem",
            "entity_spans": [
                {
                    "start": 17,
                    "end": 24,
                    "type": "software",
                    "rawForm": "MUMMALS",
                    "resp": "#annotator12",
                    "used": true,
                    "id": "d3cf53c613-software-simple-143",
                    "cert": "1.0"
                }
            ]
        },
        {
            "text": "Our model HMM_1_3_1 gives low secondary structure prediction accuracy. ",
            "section": "Multiple sequence alignment: still an unsolved problem"
        },
        {
            "text": "Providing real secondary structure information to this model can further improve alignment quality by a few percent. ",
            "section": "Multiple sequence alignment: still an unsolved problem"
        },
        {
            "text": "These results suggest that application of more accurate secondary structure predictions can lead to better alignment quality. ",
            "section": "Multiple sequence alignment: still an unsolved problem"
        },
        {
            "text": "Exploration of database sequence homologs and available 3D structures was also shown to be helpful (11,55,56). ",
            "section": "Multiple sequence alignment: still an unsolved problem",
            "ref_spans": [
                {
                    "start": 99,
                    "end": 109,
                    "type": "bibr",
                    "text": "(11,55,56)"
                }
            ]
        },
        {
            "text": "Further enhancement of multiple alignment quality could be achieved by effective integration of existing alignment techniques and various evolutionary and structural information resources.",
            "section": "Multiple sequence alignment: still an unsolved problem"
        },
        {
            "text": "The authors would like to thank Bong-Hyun Kim for the program to calculate reference-independent sequence and structural scores and Dr Kazutaka Katoh for providing the HOMSTRAD datasets. ",
            "section": "ACKNOWLEDGEMENTS"
        },
        {
            "text": "The authors would also like to thank Lisa Kinch, James Wrabl and anonymous referees for helpful comments. ",
            "section": "ACKNOWLEDGEMENTS"
        },
        {
            "text": "Funding to pay the Open Access publication charges for this article was provided by Howard Hughes Medical Institute. ",
            "section": "ACKNOWLEDGEMENTS"
        },
        {
            "text": "This work was supported in part by NIH grant GM67165 to NVG.",
            "section": "ACKNOWLEDGEMENTS"
        },
        {
            "text": "Supplementary Data are available at NAR Online.",
            "section": "SUPPLEMENTARY DATA"
        },
        {
            "text": "Conflict of interest statement. ",
            "section": "SUPPLEMENTARY DATA"
        },
        {
            "text": "None declared.",
            "section": "SUPPLEMENTARY DATA"
        }
    ]
}